/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Tink API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.tink.rest.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.tink.rest.models.insightdata.AccountBalanceLowData
import com.tink.rest.models.insightdata.BudgetCloseNegativeData
import com.tink.rest.models.insightdata.BudgetClosePositiveData
import com.tink.rest.models.insightdata.BudgetOverspentData
import com.tink.rest.models.insightdata.BudgetSuccessData
import com.tink.rest.models.insightdata.BudgetSummaryAchievedData
import com.tink.rest.models.insightdata.BudgetSummaryOverspentData
import com.tink.rest.models.insightdata.DoubleChargeData
import com.tink.rest.models.insightdata.LargeExpenseData
import com.tink.rest.models.insightdata.LeftToSpendNegativeData
import com.tink.rest.models.insightdata.MonthlySummaryExpensesByCategoryData
import com.tink.rest.models.insightdata.SingleUncategorizedTransactionData
import com.tink.rest.models.insightdata.WeeklySummaryExpensesByCategoryData
import com.tink.rest.models.insightdata.WeeklySummaryExpensesByDayData
import com.tink.rest.models.insightdata.WeeklyUncategorizedTransactionsData

/**
 * @property type The insight type
 */
@JsonClass(generateAdapter = false)
sealed class InsightData(
    @Json(name = "type") @field:Json(name = "type") var type: InsightData.TypeEnum? = null
) {
    /**
     * The insight type
     * Values: ACCOUNT_BALANCE_LOW, BUDGET_OVERSPENT, BUDGET_CLOSE_NEGATIVE, BUDGET_CLOSE_POSITIVE, BUDGET_SUCCESS, BUDGET_SUMMARY_ACHIEVED, BUDGET_SUMMARY_OVERSPENT, LARGE_EXPENSE, SINGLE_UNCATEGORIZED_TRANSACTION, DOUBLE_CHARGE, WEEKLY_UNCATEGORIZED_TRANSACTIONS, WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY, WEEKLY_SUMMARY_EXPENSES_BY_DAY, MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY, LEFT_TO_SPEND_NEGATIVE
     */
    @JsonClass(generateAdapter = false)
    enum class TypeEnum(val value: String) {
        @Json(name = "ACCOUNT_BALANCE_LOW")
        ACCOUNT_BALANCE_LOW("ACCOUNT_BALANCE_LOW"),
        @Json(name = "BUDGET_OVERSPENT")
        BUDGET_OVERSPENT("BUDGET_OVERSPENT"),
        @Json(name = "BUDGET_CLOSE_NEGATIVE")
        BUDGET_CLOSE_NEGATIVE("BUDGET_CLOSE_NEGATIVE"),
        @Json(name = "BUDGET_CLOSE_POSITIVE")
        BUDGET_CLOSE_POSITIVE("BUDGET_CLOSE_POSITIVE"),
        @Json(name = "BUDGET_SUCCESS")
        BUDGET_SUCCESS("BUDGET_SUCCESS"),
        @Json(name = "BUDGET_SUMMARY_ACHIEVED")
        BUDGET_SUMMARY_ACHIEVED("BUDGET_SUMMARY_ACHIEVED"),
        @Json(name = "BUDGET_SUMMARY_OVERSPENT")
        BUDGET_SUMMARY_OVERSPENT("BUDGET_SUMMARY_OVERSPENT"),
        @Json(name = "LARGE_EXPENSE")
        LARGE_EXPENSE("LARGE_EXPENSE"),
        @Json(name = "SINGLE_UNCATEGORIZED_TRANSACTION")
        SINGLE_UNCATEGORIZED_TRANSACTION("SINGLE_UNCATEGORIZED_TRANSACTION"),
        @Json(name = "DOUBLE_CHARGE")
        DOUBLE_CHARGE("DOUBLE_CHARGE"),
        @Json(name = "WEEKLY_UNCATEGORIZED_TRANSACTIONS")
        WEEKLY_UNCATEGORIZED_TRANSACTIONS("WEEKLY_UNCATEGORIZED_TRANSACTIONS"),
        @Json(name = "WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY")
        WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY("WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY"),
        @Json(name = "WEEKLY_SUMMARY_EXPENSES_BY_DAY")
        WEEKLY_SUMMARY_EXPENSES_BY_DAY("WEEKLY_SUMMARY_EXPENSES_BY_DAY"),
        @Json(name = "MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY")
        MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY("MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY"),
        @Json(name = "LEFT_TO_SPEND_NEGATIVE")
        LEFT_TO_SPEND_NEGATIVE("LEFT_TO_SPEND_NEGATIVE"),
        @Json(name = "UNKNOWN")
        UNKNOWN("UNKNOWN")
    }

    @JsonClass(generateAdapter = true)
    data class AccountBalanceLow(
        @Json(name = "data")
        val data: AccountBalanceLowData
    ) : InsightData(TypeEnum.ACCOUNT_BALANCE_LOW)

    @JsonClass(generateAdapter = true)
    data class BudgetOverspent(
        @Json(name = "data")
        val data: BudgetOverspentData
    ) : InsightData(TypeEnum.BUDGET_OVERSPENT)

    @JsonClass(generateAdapter = true)
    data class BudgetCloseNegative(
        @Json(name = "data")
        val data: BudgetCloseNegativeData
    ) : InsightData(TypeEnum.BUDGET_CLOSE_NEGATIVE)

    @JsonClass(generateAdapter = true)
    data class BudgetClosePositive(
        @Json(name = "data")
        val data: BudgetClosePositiveData
    ) : InsightData(TypeEnum.BUDGET_CLOSE_POSITIVE)

    @JsonClass(generateAdapter = true)
    data class BudgetSuccess(
        @Json(name = "data")
        val data: BudgetSuccessData
    ) : InsightData(TypeEnum.BUDGET_SUCCESS)

    @JsonClass(generateAdapter = true)
    data class BudgetSummaryAchieved(
        @Json(name = "data")
        val data: BudgetSummaryAchievedData
    ) : InsightData(TypeEnum.BUDGET_SUMMARY_ACHIEVED)

    @JsonClass(generateAdapter = true)
    data class BudgetSummaryOverspent(
        @Json(name = "data")
        val data: BudgetSummaryOverspentData
    ) : InsightData(TypeEnum.BUDGET_SUMMARY_OVERSPENT)

    @JsonClass(generateAdapter = true)
    data class LargeExpense(
        @Json(name = "data")
        val data: LargeExpenseData
    ) : InsightData(TypeEnum.LARGE_EXPENSE)

    @JsonClass(generateAdapter = true)
    data class SingleUncategorizedTransaction(
        @Json(name = "data")
        val data: SingleUncategorizedTransactionData
    ) : InsightData(TypeEnum.SINGLE_UNCATEGORIZED_TRANSACTION)

    @JsonClass(generateAdapter = true)
    data class DoubleCharge(
        @Json(name = "data")
        val data: DoubleChargeData
    ) : InsightData(TypeEnum.DOUBLE_CHARGE)

    @JsonClass(generateAdapter = true)
    data class WeeklyUncategorizedTransactions(
        @Json(name = "data")
        val data: WeeklyUncategorizedTransactionsData
    ) : InsightData(TypeEnum.WEEKLY_UNCATEGORIZED_TRANSACTIONS)

    @JsonClass(generateAdapter = true)
    data class WeeklySummaryExpensesByCategory(
        @Json(name = "data")
        val data: WeeklySummaryExpensesByCategoryData
    ) : InsightData(TypeEnum.WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY)

    @JsonClass(generateAdapter = true)
    data class WeeklySummaryExpensesByDay(
        @Json(name = "data")
        val data: WeeklySummaryExpensesByDayData
    ) : InsightData(TypeEnum.WEEKLY_SUMMARY_EXPENSES_BY_DAY)

    @JsonClass(generateAdapter = true)
    data class MonthlySummaryExpensesByCategory(
        @Json(name = "data")
        val data: MonthlySummaryExpensesByCategoryData
    ) : InsightData(TypeEnum.MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY)

    @JsonClass(generateAdapter = true)
    data class LeftToSpendNegative(
        @Json(name = "data")
        val data: LeftToSpendNegativeData
    ) : InsightData(TypeEnum.LEFT_TO_SPEND_NEGATIVE)

    object Unknown : InsightData(TypeEnum.UNKNOWN)
}
