/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Tink API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.tink.rest.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.tink.rest.models.insightdata.AmountWithCurrencyCode
import com.tink.rest.models.insightdata.BudgetIdToPeriod
import com.tink.rest.models.insightdata.BudgetPeriod
import com.tink.rest.models.insightdata.ExpenseByCategoryCode
import com.tink.rest.models.insightdata.ExpenseStatisticsByDay
import com.tink.rest.models.insightdata.Month
import com.tink.rest.models.insightdata.TransactionSummary
import com.tink.rest.models.insightdata.Week

/**
 * @property type The insight type
 */
@JsonClass(generateAdapter = false)
sealed class InsightData(
    @Json(name = "type") @field:Json(name = "type") var type: InsightData.TypeEnum? = null
) {
    /**
     * The insight type
     * Values: ACCOUNT_BALANCE_LOW, BUDGET_OVERSPENT, BUDGET_CLOSE_NEGATIVE, BUDGET_CLOSE_POSITIVE, BUDGET_SUCCESS, BUDGET_SUMMARY_ACHIEVED, BUDGET_SUMMARY_OVERSPENT, LARGE_EXPENSE, SINGLE_UNCATEGORIZED_TRANSACTION, DOUBLE_CHARGE, WEEKLY_UNCATEGORIZED_TRANSACTIONS, WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY, WEEKLY_SUMMARY_EXPENSES_BY_DAY, MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY, LEFT_TO_SPEND_NEGATIVE
     */
    @JsonClass(generateAdapter = false)
    enum class TypeEnum(val value: String) {
        @Json(name = "ACCOUNT_BALANCE_LOW")
        ACCOUNT_BALANCE_LOW("ACCOUNT_BALANCE_LOW"),

        @Json(name = "BUDGET_OVERSPENT")
        BUDGET_OVERSPENT("BUDGET_OVERSPENT"),

        @Json(name = "BUDGET_CLOSE_NEGATIVE")
        BUDGET_CLOSE_NEGATIVE("BUDGET_CLOSE_NEGATIVE"),

        @Json(name = "BUDGET_CLOSE_POSITIVE")
        BUDGET_CLOSE_POSITIVE("BUDGET_CLOSE_POSITIVE"),

        @Json(name = "BUDGET_SUCCESS")
        BUDGET_SUCCESS("BUDGET_SUCCESS"),

        @Json(name = "BUDGET_SUMMARY_ACHIEVED")
        BUDGET_SUMMARY_ACHIEVED("BUDGET_SUMMARY_ACHIEVED"),

        @Json(name = "BUDGET_SUMMARY_OVERSPENT")
        BUDGET_SUMMARY_OVERSPENT("BUDGET_SUMMARY_OVERSPENT"),

        @Json(name = "BUDGET_SUGGEST_CREATE_TOP_CATEGORY")
        BUDGET_SUGGEST_CREATE_TOP_CATEGORY("BUDGET_SUGGEST_CREATE_TOP_CATEGORY"),

        @Json(name = "BUDGET_SUGGEST_CREATE_TOP_PRIMARY_CATEGORY")
        BUDGET_SUGGEST_CREATE_TOP_PRIMARY_CATEGORY("BUDGET_SUGGEST_CREATE_TOP_PRIMARY_CATEGORY"),

        @Json(name = "BUDGET_SUGGEST_CREATE_FIRST")
        BUDGET_SUGGEST_CREATE_FIRST("BUDGET_SUGGEST_CREATE_FIRST"),

        @Json(name = "LARGE_EXPENSE")
        LARGE_EXPENSE("LARGE_EXPENSE"),

        @Json(name = "SINGLE_UNCATEGORIZED_TRANSACTION")
        SINGLE_UNCATEGORIZED_TRANSACTION("SINGLE_UNCATEGORIZED_TRANSACTION"),

        @Json(name = "DOUBLE_CHARGE")
        DOUBLE_CHARGE("DOUBLE_CHARGE"),

        @Json(name = "WEEKLY_UNCATEGORIZED_TRANSACTIONS")
        WEEKLY_UNCATEGORIZED_TRANSACTIONS("WEEKLY_UNCATEGORIZED_TRANSACTIONS"),

        @Json(name = "WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY")
        WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY("WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY"),

        @Json(name = "WEEKLY_SUMMARY_EXPENSES_BY_DAY")
        WEEKLY_SUMMARY_EXPENSES_BY_DAY("WEEKLY_SUMMARY_EXPENSES_BY_DAY"),

        @Json(name = "WEEKLY_SUMMARY_EXPENSE_TRANSACTIONS")
        WEEKLY_SUMMARY_EXPENSE_TRANSACTIONS("WEEKLY_SUMMARY_EXPENSE_TRANSACTIONS"),

        @Json(name = "MONTHLY_SUMMARY_EXPENSE_TRANSACTIONS")
        MONTHLY_SUMMARY_EXPENSE_TRANSACTIONS("MONTHLY_SUMMARY_EXPENSE_TRANSACTIONS"),

        @Json(name = "MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY")
        MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY("MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY"),

        @Json(name = "LEFT_TO_SPEND_NEGATIVE")
        LEFT_TO_SPEND_NEGATIVE("LEFT_TO_SPEND_NEGATIVE"),

        @Json(name = "UNKNOWN")
        UNKNOWN("UNKNOWN")
    }

    @JsonClass(generateAdapter = true)
    data class AccountBalanceLowData(
        @Json(name = "accountId")
        val accountId: String,
        @Json(name = "balance")
        val balance: AmountWithCurrencyCode
    ) : InsightData(TypeEnum.ACCOUNT_BALANCE_LOW)

    @JsonClass(generateAdapter = true)
    data class BudgetOverspentData(
        @Json(name = "budgetId")
        val budgetId: String,
        @Json(name = "budgetPeriod")
        val budgetPeriod: BudgetPeriod
    ) : InsightData(TypeEnum.BUDGET_OVERSPENT)

    @JsonClass(generateAdapter = true)
    data class BudgetCloseNegativeData(
        @Json(name = "budgetId")
        val budgetId: String,
        @Json(name = "budgetPeriod")
        val budgetPeriod: BudgetPeriod,
        @Json(name = "currentTime")
        val currentTime: Long,
        @Json(name = "periodUnit")
        val periodUnit: String
    ) : InsightData(TypeEnum.BUDGET_CLOSE_NEGATIVE)

    @JsonClass(generateAdapter = true)
    data class BudgetClosePositiveData(
        @Json(name = "budgetId")
        val budgetId: String,
        @Json(name = "budgetPeriod")
        val budgetPeriod: BudgetPeriod,
        @Json(name = "currentTime")
        val currentTime: Long,
        @Json(name = "periodUnit")
        val periodUnit: String
    ) : InsightData(TypeEnum.BUDGET_CLOSE_POSITIVE)

    @JsonClass(generateAdapter = true)
    data class BudgetSuccessData(
        @Json(name = "budgetId")
        val budgetId: String,
        @Json(name = "budgetPeriod")
        val budgetPeriod: BudgetPeriod
    ) : InsightData(TypeEnum.BUDGET_SUCCESS)

    @JsonClass(generateAdapter = true)
    data class BudgetSummaryAchievedData(
        @Json(name = "achievedBudgets")
        val achievedBudgets: List<BudgetIdToPeriod>,
        @Json(name = "overspentBudgets")
        val overspentBudgets: List<BudgetIdToPeriod>,
        @Json(name = "periodUnit")
        val periodUnit: String,
        @Json(name = "savedAmount")
        val savedAmount: AmountWithCurrencyCode
    ) : InsightData(TypeEnum.BUDGET_SUMMARY_ACHIEVED)

    @JsonClass(generateAdapter = true)
    data class BudgetSummaryOverspentData(
        @Json(name = "achievedBudgets")
        val achievedBudgets: List<BudgetIdToPeriod>,
        @Json(name = "overspentAmount")
        val overspentAmount: AmountWithCurrencyCode,
        @Json(name = "overspentBudgets")
        val overspentBudgets: List<BudgetIdToPeriod>,
        @Json(name = "periodUnit")
        val periodUnit: String
    ) : InsightData(TypeEnum.BUDGET_SUMMARY_OVERSPENT)

    @JsonClass(generateAdapter = true)
    data class BudgetSuggestCreateTopCategoryData(
        @Json(name = "categorySpending")
        val categorySpending: ExpenseByCategoryCode,
        @Json(name = "suggestedBudgetAmount")
        val suggestedBudgetAmount: AmountWithCurrencyCode
    ) : InsightData(TypeEnum.BUDGET_SUGGEST_CREATE_TOP_CATEGORY)

    @JsonClass(generateAdapter = true)
    data class BudgetSuggestCreateTopPrimaryCategoryData(
        @Json(name = "categorySpending")
        val categorySpending: ExpenseByCategoryCode,
        @Json(name = "suggestedBudgetAmount")
        val suggestedBudgetAmount: AmountWithCurrencyCode
    ) : InsightData(TypeEnum.BUDGET_SUGGEST_CREATE_TOP_PRIMARY_CATEGORY)

    object BudgetSuggestCreateFirstData : InsightData(TypeEnum.BUDGET_SUGGEST_CREATE_FIRST)

    @JsonClass(generateAdapter = true)
    data class LargeExpenseData(
        @Json(name = "amount")
        val amount: AmountWithCurrencyCode,
        @Json(name = "transactionId")
        val transactionId: String
    ) : InsightData(TypeEnum.LARGE_EXPENSE)

    @JsonClass(generateAdapter = true)
    data class SingleUncategorizedTransactionData(
        @Json(name = "transactionId")
        val transactionId: String
    ) : InsightData(TypeEnum.SINGLE_UNCATEGORIZED_TRANSACTION)

    @JsonClass(generateAdapter = true)
    data class DoubleChargeData(
        @Json(name = "transactionIds")
        val transactionIds: List<String>
    ) : InsightData(TypeEnum.DOUBLE_CHARGE)

    @JsonClass(generateAdapter = true)
    data class WeeklyUncategorizedTransactionsData(
        @Json(name = "transactionIds")
        val transactionIds: List<String>,
        @Json(name = "week")
        val week: Week
    ) : InsightData(TypeEnum.WEEKLY_UNCATEGORIZED_TRANSACTIONS)

    @JsonClass(generateAdapter = true)
    data class WeeklySummaryExpensesByCategoryData(
        @Json(name = "expensesByCategory")
        val expensesByCategory: List<ExpenseByCategoryCode>,
        @Json(name = "week")
        val week: Week
    ) : InsightData(TypeEnum.WEEKLY_SUMMARY_EXPENSES_BY_CATEGORY)

    @JsonClass(generateAdapter = true)
    data class WeeklySummaryExpensesByDayData(
        @Json(name = "expenseStatisticsByDay")
        val expenseStatisticsByDay: List<ExpenseStatisticsByDay>,
        @Json(name = "week")
        val week: Week
    ) : InsightData(TypeEnum.WEEKLY_SUMMARY_EXPENSES_BY_DAY)

    @JsonClass(generateAdapter = true)
    data class MonthlySummaryExpensesByCategoryData(
        @Json(name = "expensesByCategory")
        val expensesByCategory: List<ExpenseByCategoryCode>,
        @Json(name = "month")
        val month: Month
    ) : InsightData(TypeEnum.MONTHLY_SUMMARY_EXPENSES_BY_CATEGORY)

    @JsonClass(generateAdapter = true)
    data class LeftToSpendNegativeData(
        @Json(name = "createdAt")
        val createdAt: Long,
        @Json(name = "leftToSpend")
        val leftToSpend: AmountWithCurrencyCode,
        @Json(name = "month")
        val month: Month
    ) : InsightData(TypeEnum.LEFT_TO_SPEND_NEGATIVE)

    @JsonClass(generateAdapter = true)
    data class MonthlySummaryExpenseTransactions(
        @Json(name = "month")
        val month: Month,
        @Json(name = "transactionSummary")
        val transactionSummary: TransactionSummary
    ) : InsightData(TypeEnum.MONTHLY_SUMMARY_EXPENSE_TRANSACTIONS)

    @JsonClass(generateAdapter = true)
    data class WeeklySummaryExpenseTransactions(
        @Json(name = "week")
        val week: Week,
        @Json(name = "transactionSummary")
        val transactionSummary: TransactionSummary
    ) : InsightData(TypeEnum.WEEKLY_SUMMARY_EXPENSE_TRANSACTIONS)

    object Unknown : InsightData(TypeEnum.UNKNOWN)
}
